# import argparse
# import csv
# from unicodedata import name
# from django.core.management.base import BaseCommand,CommandError
# from ...models import Employee_details

# class Command(BaseCommand):
#      help = "Import students by homeroom."

#      def add_arguments(self, parser):
#          parser.add_argument('csvfile', nargs='?', type=argparse.FileType('r'))

#      def handle(self, *args, **options):
#          emp_list = []
#          hr = Employee_details.objects.get(Employee_name='guru')
#          with options['csvfile'] as csvfile:
#              reader = csv.DictReader(csvfile)
#              for row in reader:
#                  emp_list.append(Employee_details(Employee_name=row[" Employee_name"], Phone_number=row["Phone_number"], Email=row["Email"], Designation=row["Designation"],guru=hr))

import csv
from re import UNICODE
from .tools import DynamicCommand 


class Command(DynamicCommand):
    """
    Easily export a model's objects in csv format.  In this example the csv can be generated by executing:
    ./manage.py export your_model
    """

    def your_model(self):
        from ...models import Employee_details
        meta = {
            'file': '/tmp/your_model.csv',
            'class': Employee_details,
            'fields': ('Employee_name', 'Phone_number' , 'Email' , 'Designation') # models fields you want to include 
        }
        self._write_csv(meta)

    def _write_csv(self, meta):
        """
        :param meta: (dict) keys should be 'file' (string: absolute path), 'class' the Python class
        object, 'fields' a list or tuple of field model field names (strings)
        """
        f = open(meta['file'], 'w+')
        writer = csv.writer(f, encoding='utf-8')
        writer.writerow( meta['fields'] )
        for obj in meta['class'].objects.all():
            row = [UNICODE(getattr(obj, field)) for field in meta['fields']]
            writer.writerow(row)
        f.close()
        # print 'Data written to %s' % meta['file']



# import csv
# from parse.models import Employee_details
# from django.http import HttpResponse
# from django.core.management.base import BaseCommand,CommandError
# from ...views import export_to_csv


# class Command(BaseCommand):
#      def add_arguments(self, parser):
#         def handle(self, *args, **options):
#             # def export_to_csv(request):
#             #     Candidate = Employee_details.objects.all()
#             #     response = HttpResponse('text/csv')
#             #     response['Content-Disposition'] = 'attachment; filename=Employee_details_report.csv'
#             #     write =csv.writer(response)
#             #     write.writerow(['Employee_name','Phone_number','Email','Designation'])
#             #     fields=Candidate.values_list("Employee_name","Phone_number","Email","Designation")
#             #     for candidate in fields:
#             #         write.writerow(candidate)
#             #     return response
#             return export_to_csv
